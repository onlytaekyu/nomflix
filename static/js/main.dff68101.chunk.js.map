{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","Link","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_yield$moviesApi$sear","_yield$tvApi$search","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Header_templateObject4","withRouter","pathname","location","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","_super","call","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Detail_DetailPresenter","Router","BrowserRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","Search","Detail","Redirect","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.dff68101.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n      <Text color={color}>{text}</Text>\r\n    </Container>\r\n  );\r\n \r\n  Message.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n  };\r\n  \r\n  export default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n      <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"C:/cop/nomflix/src/assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Nomflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n          </Helmet>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing\">\r\n              {nowPlaying.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {upcoming && upcoming.length > 0 && (\r\n            <Section title=\"Upcoming Movies\">\r\n              {upcoming.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Movies\">\r\n              {popular.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"aae8d521e92788cce026b0a465db1353\",\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: term =>\r\n        api.get(\"search/movie\", {\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n            }\r\n        })\r\n\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: term =>\r\n        api.get(\"search/tv\", {\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n            }\r\n        })\r\n};","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer; ","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try {\r\n\r\n            const {\r\n                data: { results: nowPlaying }\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data: {results: upcoming}\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data: {results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            });\r\n\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            });\r\n        } finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return (\r\n            <HomePresenter \r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n    <>\r\n      <Helmet>\r\n        <title>TV Shows | Nomflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {topRated && topRated.length > 0 && (\r\n            <Section title=\"Top Rated Shows\">\r\n              {topRated.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Shows\">\r\n              {popular.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {airingToday && airingToday.length > 0 && (\r\n            <Section title=\"Airing Today\">\r\n              {airingToday.map(show => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer; ","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport {tvApi} from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n    async componentDidMount(){\r\n        try {\r\n\r\n            const {\r\n                data: { results: topRated }\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data: {results: popular}\r\n            } = await tvApi.popular();\r\n            const {\r\n                data: {results: airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            });\r\n\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            });\r\n        } finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {topRated, popular, airingToday, error, loading} = this.state;\r\n        return (\r\n            <TVPresenter \r\n                topRated={topRated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer; ","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color: white;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display: flex;\r\n    align-items:center;\r\n    background-color:rgba(20, 20, 20, 0.8);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\r\n    \r\n    \r\n`;\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:80px;\r\n    height:50px;\r\n    text-align: center;\r\n    border-bottom:3px solid \r\n    ${props => (props.current ? \"#3489db\" :\"transparent\")};\r\n    transition: border-bottom 0.5s ease-in-out;\r\n    \r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n\r\n`;\r\n\r\n    export default withRouter(({ location: {pathname}}) => (\r\n        <Header>\r\n        <List >\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n    )\r\n    \r\n    );","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>  \r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"C:/cop/nomflix/src/assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer; ","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {location: {pathname}} = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n    \r\n\r\n    async componentDidMount(){\r\n        const{\r\n            match: {\r\n                params: {id}\r\n            },\r\n            history: {push}\r\n        } = this.props;\r\n        const {isMovie} = this.state;\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)){\r\n            return  push(\"/\");\r\n        }\r\n        let result = null;\r\n        try{\r\n            if(isMovie){\r\n                ({data: result} = await moviesApi.movieDetail(parsedId));\r\n                \r\n            }else{\r\n                ({data: result} = await tvApi.showDetail(parsedId));\r\n            }\r\n        }catch{\r\n            this.setState({error: \"Can't find anything.\"});\r\n        }finally{\r\n            this.setState({loading: false, result});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const {result, error, loading} = this.state;\r\n        console.log(result);\r\n        return (\r\n            <DetailPresenter \r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Header from \"./Header\"\r\nimport Detail from \"../Routes/Detail\";\r\n\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home}/>\r\n                <Route path=\"/tv\"  exact component={TV}/>\r\n                <Route path=\"/search\"  component={Search}/>\r\n                <Route path=\"/move/:id\"  component={Detail}/>\r\n                <Route path=\"/show/:id\"  component={Detail}/>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>   \r\n    </Router>\r\n)","import {createGlobalStyle} from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\n\r\nconst globalStyles = createGlobalStyle `\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit;   \r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 14px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n    `;\r\n\r\n    export default globalStyles;","import React, { Component } from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n \n\nclass App extends Component {\n  render(){\n   return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n   );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './api';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n"],"sourceRoot":""}